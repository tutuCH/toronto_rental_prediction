@import "/src/styles/Variables.scss";
.app {
  // margin-top: 3.5rem;
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  background: $background;

  
  $bubble-count: 50;
  $sway-type: "sway-left-to-right", "sway-right-to-left";
  
  @function random_range($min, $max) {
    $rand: random();
    $random_range: $min + floor($rand * (($max - $min) + 1));
    @return $random_range;
  }
  
  @function sample($list) {
    @return nth($list, random(length($list)));
  }
  
  .bubbles {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
  }
  
  .bubble {
    position: absolute;
    left: var(--bubble-left-offset);
    bottom: -50%;
    display: block;
    width: var(--bubble-radius);
    height: var(--bubble-radius);
    border-radius: 50%;
    animation: float-up var(--bubble-float-duration) var(--bubble-float-delay) ease-in infinite;
  
    &::before {
      position: absolute;
      content: '';
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: hsla(183, 94%, 76%, 0.3);
      border-radius: inherit;
      animation: var(--bubble-sway-type) var(--bubble-sway-duration) var(--bubble-sway-delay) ease-in-out alternate infinite;
    }
  
    @for $i from 0 through $bubble-count {
      &:nth-child(#{$i}) {
        --bubble-left-offset: #{random_range(0vw, 100vw)};
        --bubble-radius: #{random_range(1vw, 10vw)};
        --bubble-float-duration: #{random_range(6s, 12s)};
        --bubble-sway-duration: #{random_range(4s, 6s)};
        --bubble-float-delay: #{random_range(0s, 4s)};
        --bubble-sway-delay: #{random_range(0s, 4s)};
        --bubble-sway-type: #{sample($sway-type)};
      }
    }
  }
  
  @keyframes float-up {
    to {
      transform: translateY(-175vh);
    }
  }
  
  @keyframes sway-left-to-right {
    from {
      transform: translateX(-100%);
    }
  
    to {
      transform: translateX(100%);
    }
  }
  
  @keyframes sway-right-to-left {
    from {
      transform: translateX(100%);
    }
  
    to {
      transform: translateX(-100%);
    }
  }  
}

.description__container{
  background: $background;
  padding: 1rem;
}

.port-tabs__container {
  display: flex;
  gap: 1rem;
  color: $white;
  .tab-button__element{
    border-left: 1px solid $white;
    color: $white;
    opacity: 100%;
    background: $light-blue;
  }
  
  .hidden-tab-button__element{
    opacity: 30%;
    background: transparent;
  }
}

.landing-container {
  height: calc(100vh - 3.5rem);
  position: relative;
  width: 100%;
  overflow: hidden;
  .background-container {
      height: 100%;
  }
  
  .info-container {
      color: $white
  }
  
  .info-supp-element {
      font-size: 1.5rem;
  }   
  
  .info-main-element {
      font-size: 4rem;
      display: flex;
      justify-content: center;
  }
  
  .typing {
      width: fit-content;
      overflow: hidden; /* Ensures the content is not revealed until the animation */
      border-right: .15em solid $white; /* The typwriter cursor */
      white-space: nowrap; /* Keeps the content on a single line */
      margin: 0 auto; /* Gives that scrolling effect as the typing happens */
      letter-spacing: .15em; /* Adjust as needed */
      animation: 
        typing 3.5s steps(40, end),
        blink-caret .75s step-end infinite;
  }
  
  @keyframes typing {
      from { width: 0 }
      to { width: 100% }
    }
    
    /* The typewriter cursor effect */
    @keyframes blink-caret {
      from, to { border-color: transparent }
      50% { border-color: $white; }
    }
  
  .centre {
      margin: 0;
      position: absolute;
      top: 50%;
      left: 50%;
      -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);    
  }    
}


.about-me__container {
  .featured-experiences-link{
    padding: 0.5rem;
    background: $light-blue;
  }
  .profile-element{
    transition: all .3s;
    width: 100%;
    max-width: 200px;
    box-shadow: 1rem 1rem $light-blue;
    margin: 1rem;
  }
  
  .profile-element:hover {
    transform: translate(-0.5rem,-0.5rem);
    box-shadow: 2rem 2rem $light-blue;
  }
  .experiences-animation-element{
    transition: all .3s;
    margin: 1rem;
  }
  
  .experiences-animation-element:hover {
    transform: translateY(-0.5rem);
  }
  .experience-logo {
    width: 100%;
    max-width: 75px;
  }
}

.contact-section__container{
  color: $white;
  margin: 5rem auto;
  .contact-section-header {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    display: flex;
    color: $white;
    justify-content: center;
  }
  .contact-section-content__container{
    max-width: 600px;
    margin: auto;
  }  
  .contact-section-header:before,
  .contact-section-header:after {
    content: "";
    max-width: 250px;
    width: 33%;
    border-bottom: 1px solid $white;
    margin: auto 1em;
  }
  .contact-button__container{
    margin-top: 1rem;
  }
  .contact-button {
    width: 150px;
  }  
}

.section__container {
  min-height: 75vh;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
  padding-top: 15rem;
}

.section-content-left {
  border-left: 1px solid $white;
  padding: 1rem;
  color: $white;
}

.section-content-right {
  border-right: 1px solid $white;
  padding: 1rem;
  color: $white;
}

.section-header-left {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  display: flex;
  color: $white;
}

.section-header-left:after {
  content: "";
  max-width: 250px;
  width: 33%;
  border-bottom: 1px solid $white;
  margin: auto 1em;
}

.section-header-right {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  display: flex;
  color: $white;
  justify-content: flex-end;
}

.section-header-right:before {
  content: "";
  max-width: 250px;
  width: 33%;
  border-bottom: 1px solid $white;
  margin: auto 1em;
}

.arrow {
  border: solid $light-blue;
  border-width: 0 3px 3px 0;
  display: inline-block;
  padding: 3px;
  margin: 0 .5rem;
}

.right {
  transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg);
}

.dashed-line {
  border-top: 1px dashed;
  margin: 1rem;
  width: 66%;
}

.navbar-expand-lg .navbar-nav {
  align-items: center;
}